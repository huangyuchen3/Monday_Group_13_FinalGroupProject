/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.COManagerRole;

import Business.EcoSystem;
import Business.CommunityOutreach.CommunityOutreach;
import Business.COVolunteer.COVolunteerRequests;
import Business.COVolunteer.COVolunteer;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 *@author reetikabhanushali
 */
public class RequestsPanel extends javax.swing.JPanel {

    /**
     * Creates new form Requests
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String ngoAName;
    String nogName = "";

    public RequestsPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        ngoAName = userAcc.getEmployee().getName();
        for (CommunityOutreach ng : ecosystem.getcoDir().getNgoList()) {
            if (ng.getCOAgent().equals(ngoAName)) {
                nogName = ng.getCOName();
            }
        }
        setBG();
        makeTableTransparent1();
        makeTableTransparent();
        populateRTable();
        populateVTable();
        //tblV.setVisible(false);
        // btnAvail.setVisible(false);
        btnDHProcess.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddReqFCTitle = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        tblDHReq = new javax.swing.JTable();
        btnDHReqAvail = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDistributionHub = new javax.swing.JTable();
        btnDHProcess = new javax.swing.JButton();
        lblAddDHTitle = new javax.swing.JLabel();
        lblDistributionHub = new javax.swing.JLabel();
        lblRequestID = new javax.swing.JLabel();
        lblReq = new javax.swing.JLabel();
        LabelImage = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddReqFCTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        lblAddReqFCTitle.setForeground(new java.awt.Color(102, 102, 255));
        lblAddReqFCTitle.setText("Requests From Distribution Hub / Drop Off Store");
        add(lblAddReqFCTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));

        tblDHReq.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        tblDHReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Request", "Distribution Hub / Drop Off Store", "Number of Persons", "Status"
            }
        ));
        tblDHReq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDHReqMousePressed(evt);
            }
        });
        jScrollPane.setViewportView(tblDHReq);

        add(jScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1010, 129));

        btnDHReqAvail.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnDHReqAvail.setText("Make Available");
        btnDHReqAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDHReqAvailActionPerformed(evt);
            }
        });
        add(btnDHReqAvail, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 463, -1, -1));

        tblDistributionHub.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        tblDistributionHub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Volunteer ID", "Name", "Address", "City", "Zip", "Status"
            }
        ));
        tblDistributionHub.setGridColor(new java.awt.Color(0, 0, 0));
        tblDistributionHub.setOpaque(false);
        tblDistributionHub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDistributionHubMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblDistributionHub);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 292, 1020, 153));

        btnDHProcess.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnDHProcess.setText("Process");
        btnDHProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDHProcessActionPerformed(evt);
            }
        });
        add(btnDHProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 206, -1, -1));

        lblAddDHTitle.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblAddDHTitle.setText("For Distribution Hub/ Drop Off Store:");
        add(lblAddDHTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 259, -1, -1));

        lblDistributionHub.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        add(lblDistributionHub, new org.netbeans.lib.awtextra.AbsoluteConstraints(157, 241, -1, -1));

        lblRequestID.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblRequestID.setText("Request ID:");
        add(lblRequestID, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 224, -1, -1));

        lblReq.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        add(lblReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 235, -1, -1));
        add(LabelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 850));
    }// </editor-fold>//GEN-END:initComponents

    public void setBG() {
        try {
            LabelImage.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImage.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImage.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/background2.png"));

            Image newimg = img.getScaledInstance(1350, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImage.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(ManageVolunteerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void makeTableTransparent() {
        tblDHReq.setOpaque(false);
        ((DefaultTableCellRenderer) tblDHReq.getDefaultRenderer(Object.class)).setOpaque(false);
        tblDHReq.setShowGrid(false);
        jScrollPane.setOpaque(false);
        jScrollPane.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblDHReq.getModel().getColumnCount(); i++) {
            tblDHReq.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }

    public void makeTableTransparent1() {
        tblDistributionHub.setOpaque(false);
        ((DefaultTableCellRenderer) tblDistributionHub.getDefaultRenderer(Object.class)).setOpaque(false);
        tblDistributionHub.setShowGrid(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblDistributionHub.getModel().getColumnCount(); i++) {
            tblDistributionHub.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }
    

    private void btnDHReqAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDHReqAvailActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDistributionHub.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDistributionHub.getModel();
        COVolunteer selectedV = (COVolunteer) model.getValueAt(selectedRowIndex, 0);
        if (selectedV.getVolAvail().equals("New") || selectedV.getVolAvail().equals("No")) {
            selectedV.setVolAvail("Yes");
            String reqidval = lblReq.getText();
            for (COVolunteerRequests vr : ecosystem.getVRDirectory().getVrList()) {
                if (vr.getVolreqId().equals(reqidval)) {
                    vr.setVolreqStatus("Completed");
                }
            }
            JOptionPane.showMessageDialog(this, "Request Completed");
        } else if (selectedV.getVolAvail().equals("Yes")) {
            JOptionPane.showMessageDialog(this, "This Volunteer is already available");
        }
        populateRTable();
        populateVTable();
        lblReq.setText("");
        lblDistributionHub.setText("");
    }//GEN-LAST:event_btnDHReqAvailActionPerformed

    private void btnDHProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDHProcessActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDHReq.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDHReq.getModel();
        COVolunteerRequests selectedVR = (COVolunteerRequests) model.getValueAt(selectedRowIndex, 0);
        if (selectedVR.getVolreqStatus().equals("Completed")) {
            JOptionPane.showMessageDialog(this, "Request already completed!");
        } else {
            lblDistributionHub.setText(selectedVR.getVolreqDB());
            lblReq.setText(selectedVR.getVolreqId());
            tblDistributionHub.setVisible(true);
            btnDHReqAvail.setVisible(true);
        }
        populateVTable();
    }//GEN-LAST:event_btnDHProcessActionPerformed

    private void tblDHReqMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDHReqMousePressed
        // TODO add your handling code here:
                tblDHReq.setSelectionForeground(Color.BLACK);
    }//GEN-LAST:event_tblDHReqMousePressed

    private void tblDistributionHubMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDistributionHubMousePressed
        // TODO add your handling code here:
                tblDistributionHub.setSelectionForeground(Color.BLACK);
    }//GEN-LAST:event_tblDistributionHubMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImage;
    private javax.swing.JButton btnDHProcess;
    private javax.swing.JButton btnDHReqAvail;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddDHTitle;
    private javax.swing.JLabel lblAddReqFCTitle;
    private javax.swing.JLabel lblDistributionHub;
    private javax.swing.JLabel lblReq;
    private javax.swing.JLabel lblRequestID;
    private javax.swing.JTable tblDHReq;
    private javax.swing.JTable tblDistributionHub;
    // End of variables declaration//GEN-END:variables

    private void populateRTable() {
        DefaultTableModel model = (DefaultTableModel) tblDHReq.getModel();
    model.setRowCount(0);

    for (COVolunteerRequests vr : ecosystem.getVRDirectory().getVrList()) {
        if (vr.getVolreqName().equals(nogName)) {
            Object[] row = new Object[6];
            row[0] = vr.getVolreqId(); // Request ID
            row[1] = vr.getVolreqName(); // Request name
            row[2] = vr.getVolreqSource(); // Source (Distribution Hub or Drop-Off Store)
            row[3] = vr.getVolreqNum(); // Number of persons
            row[4] = vr.getVolreqStatus(); // Status
            model.addRow(row);
        }
    }
    }
    
    

//    private void populateVTable() {
//        DefaultTableModel model = (DefaultTableModel) tblDistributionHub.getModel();
//        model.setRowCount(0);
//        for (COVolunteer vol : ecosystem.getVolDir().getVolunteerList()) {
//            if (vol.getVolCO().equals(ngoAName)) {
//                Object[] row = new Object[6];
//                row[0] = vol;
//                row[1] = vol.getVolName();
//                row[2] = vol.getVolAddress();
//                row[3] = vol.getVolCity();
//                row[4] = vol.getVolZipcode();
//                row[5] = vol.getVolAvail();
//                model.addRow(row);
//            }
//        }
//    }
    
    private void populateVTable() {
        DefaultTableModel model = (DefaultTableModel) tblDistributionHub.getModel();
            model.setRowCount(0);

            for (COVolunteer vol : ecosystem.getVolDir().getVolunteerList()) {
        // Check if the volunteer's manager matches the logged-in manager
                if (vol.getManagerUsername().equals(userAcc.getUsername())) {
                    Object[] row = new Object[6];
                    row[0] = vol; // Store the actual COVolunteer object, not just the ID
                    row[1] = vol.getVolName();
                    row[2] = vol.getVolAddress();
                    row[3] = vol.getVolCity();
                    row[4] = vol.getVolZipcode();
                    row[5] = vol.getVolAvail(); // Assuming vol.getVolAvail() returns the availability status
                    model.addRow(row);
                }
                    }
}

}
