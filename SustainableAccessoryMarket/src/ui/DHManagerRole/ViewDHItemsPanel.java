/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DHManagerRole;

import Business.EcoSystem;
import Business.DropOff.DropOffItems;
import Business.DropOff.DropOffItemsDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 *@author reetikabhanushali
 */
public class ViewDHItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewDHItemsPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    DropOffItemsDirectory fcpid;
    String FCPname;
    String WHname;

    public ViewDHItemsPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        
        //FCPname = ecosystem.getFCPDirectory();
        String FCAname = userAcc.getEmployee().getName();
        System.out.println(FCAname);
        WHname= ecosystem.getACDDirectory().getDHname(FCAname);
         System.out.println(WHname + "ankith Whname");
        viewPanel.setVisible(false);
        setBG();
        populatePantryItemsTable();
        makeTableTransparent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddPantryTitle = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        tblDOItems = new javax.swing.JTable();
        btnPEdit = new javax.swing.JButton();
        btnPDelete = new javax.swing.JButton();
        viewPanel = new javax.swing.JPanel();
        txtAccessoryItem = new javax.swing.JTextField();
        txtDOManager = new javax.swing.JTextField();
        lblDHName = new javax.swing.JLabel();
        txtDOName = new javax.swing.JTextField();
        lblItemID = new javax.swing.JLabel();
        txtAccessoryQnt = new javax.swing.JTextField();
        txtDHname = new javax.swing.JTextField();
        lblAccessoryItem = new javax.swing.JLabel();
        btnDOUpdate = new javax.swing.JButton();
        lblDOManager = new javax.swing.JLabel();
        lblDOname = new javax.swing.JLabel();
        lblitmId = new javax.swing.JLabel();
        lblAccessoryQnt = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        LabelImage = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        lblAddPantryTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 29)); // NOI18N
        lblAddPantryTitle.setForeground(new java.awt.Color(102, 102, 255));
        lblAddPantryTitle.setText("View/Modify Drop-Off Store Items");
        add(lblAddPantryTitle);
        lblAddPantryTitle.setBounds(180, 20, 480, 35);

        tblDOItems.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        tblDOItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Drop-Off Hub Name", "Drop-Off Name", "Drop-Off Manager", "Accessory Items", "Accessory Quantity"
            }
        ));
        tblDOItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDOItemsMousePressed(evt);
            }
        });
        jScrollPane.setViewportView(tblDOItems);

        add(jScrollPane);
        jScrollPane.setBounds(20, 80, 780, 153);

        btnPEdit.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnPEdit.setText("Edit");
        btnPEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPEditActionPerformed(evt);
            }
        });
        add(btnPEdit);
        btnPEdit.setBounds(960, 260, 92, 22);

        btnPDelete.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnPDelete.setText("Delete");
        btnPDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDeleteActionPerformed(evt);
            }
        });
        add(btnPDelete);
        btnPDelete.setBounds(1050, 260, 92, 22);

        viewPanel.setOpaque(false);
        viewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAccessoryItem.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtAccessoryItem.setPreferredSize(new java.awt.Dimension(150, 25));
        txtAccessoryItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAccessoryItemFocusLost(evt);
            }
        });
        txtAccessoryItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAccessoryItemKeyReleased(evt);
            }
        });
        viewPanel.add(txtAccessoryItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 137, -1));

        txtDOManager.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtDOManager.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDOManager.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDOManagerFocusLost(evt);
            }
        });
        txtDOManager.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDOManagerKeyReleased(evt);
            }
        });
        viewPanel.add(txtDOManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 137, -1));

        lblDHName.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblDHName.setText("Distribution Hub Name:");
        viewPanel.add(lblDHName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        txtDOName.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtDOName.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDOName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDONameFocusLost(evt);
            }
        });
        txtDOName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDONameKeyReleased(evt);
            }
        });
        viewPanel.add(txtDOName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 137, -1));

        lblItemID.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        viewPanel.add(lblItemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 130, 20));

        txtAccessoryQnt.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtAccessoryQnt.setPreferredSize(new java.awt.Dimension(150, 25));
        txtAccessoryQnt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAccessoryQntFocusLost(evt);
            }
        });
        txtAccessoryQnt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAccessoryQntKeyReleased(evt);
            }
        });
        viewPanel.add(txtAccessoryQnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 137, -1));

        txtDHname.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtDHname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDHname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDHnameFocusLost(evt);
            }
        });
        txtDHname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDHnameKeyReleased(evt);
            }
        });
        viewPanel.add(txtDHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 137, -1));

        lblAccessoryItem.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblAccessoryItem.setText("Accessory Item:");
        viewPanel.add(lblAccessoryItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        btnDOUpdate.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnDOUpdate.setText("Update");
        btnDOUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDOUpdateActionPerformed(evt);
            }
        });
        viewPanel.add(btnDOUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 92, -1));

        lblDOManager.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblDOManager.setText("Drop-Off Manager:");
        viewPanel.add(lblDOManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, -1, -1));

        lblDOname.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblDOname.setText("Drop-Off Name:");
        viewPanel.add(lblDOname, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        lblitmId.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblitmId.setText("Item ID:");
        viewPanel.add(lblitmId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        lblAccessoryQnt.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblAccessoryQnt.setText("Accessory Quantity:");
        viewPanel.add(lblAccessoryQnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        btnCancel.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        viewPanel.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 90, -1));

        add(viewPanel);
        viewPanel.setBounds(140, 250, 450, 410);
        add(LabelImage);
        LabelImage.setBounds(0, 0, 3220, 950);
    }// </editor-fold>//GEN-END:initComponents

    public void setBG() {
        try {
            LabelImage.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImage.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImage.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/background2.png"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImage.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {

        }
    }

    public void makeTableTransparent() {
        tblDOItems.setOpaque(false);
        ((DefaultTableCellRenderer) tblDOItems.getDefaultRenderer(Object.class)).setOpaque(false);
        tblDOItems.setShowGrid(false);
        jScrollPane.setOpaque(false);
        jScrollPane.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblDOItems.getModel().getColumnCount(); i++) {
            tblDOItems.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }

    private void btnPEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPEditActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDOItems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to Edit");
            return;
        }
        viewPanel.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) tblDOItems.getModel();
        DropOffItems selectedFCPI = (DropOffItems) model.getValueAt(selectedRowIndex, 0);
        lblItemID.setText(selectedFCPI.getDropOffItemId());
        txtDHname.setText(selectedFCPI.getDropOffHubName());
        txtDOName.setText(selectedFCPI.getDropOffName());
        txtDOManager.setText(selectedFCPI.getDropOffManager());
        txtAccessoryItem.setText(selectedFCPI.getAccessoryItems());
        txtAccessoryQnt.setText(String.valueOf(selectedFCPI.getAccessoryQuantity()));
    }//GEN-LAST:event_btnPEditActionPerformed

    private void btnPDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDOItems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDOItems.getModel();
        DropOffItems selectedFCPI = (DropOffItems) model.getValueAt(selectedRowIndex, 0);
        /* // First delete the customer from employee
        this.system.getEmployeeDirectory().deleteEmployee(selectedRest.getResManagerName());
        // And thne delete the userAccount
        this.system.getUserAccountDirectory().deleteUserAcc(
            this.system.getRestaurantDirectory().getResList().
            get(selectedRowIndex).getUserAcc()
        );
        // finally delete the user from customer directory*/
        //  ecosystem.getFCPDirectory().deleteFCPantry(selectedFCP);
        fcpid = ecosystem.getACDOIDirectory();
        fcpid.deleteFCPItems(selectedFCPI);
        ecosystem.setACDOIDirectory(fcpid);
        JOptionPane.showMessageDialog(this, "Pantry Item deleted Successfully");
        populatePantryItemsTable();
    }//GEN-LAST:event_btnPDeleteActionPerformed

    private void txtDHnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDHnameFocusLost
        // TODO add your handling code here:
        if (!(txtDHname.getText().matches("^[a-zA-Z]*$"))) {
            lblDOManager.setText("Invalid input. Please enter only alphabets");
        } else {
            lblDOManager.setText("");
        }
    }//GEN-LAST:event_txtDHnameFocusLost

    private void txtDHnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDHnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDHnameKeyReleased

    private void txtDONameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDONameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDONameFocusLost

    private void txtDONameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDONameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDONameKeyReleased

    private void txtDOManagerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDOManagerFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOManagerFocusLost

    private void txtDOManagerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDOManagerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOManagerKeyReleased

    private void txtAccessoryItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAccessoryItemFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccessoryItemFocusLost

    private void txtAccessoryItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAccessoryItemKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccessoryItemKeyReleased

    private void txtAccessoryQntFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAccessoryQntFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccessoryQntFocusLost

    private void txtAccessoryQntKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAccessoryQntKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccessoryQntKeyReleased

    private void btnDOUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDOUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDOItems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDOItems.getModel();
        String FCPid = lblItemID.getText();
        ArrayList<DropOffItems> fcPantryItemsList = ecosystem.getACDOIDirectory().getDOiList();
        for (DropOffItems f : fcPantryItemsList) {
            if (f.getDropOffItemId().equals(FCPid)) {
                f.setDropOffHubName(txtDHname.getText());
                f.setDropOffName(txtDOName.getText());
                f.setDropOffManager(txtDOManager.getText());
                f.setAccessoryItems(txtAccessoryItem.getText());
                f.setAccessoryQuantity(txtAccessoryQnt.getText());
                //UserAccount FCPua=new UserAccount();
                //FCPua.setUsername(txtFCPuname.getText());
                //FCPua.setPassword(txtFCPpwd.getText());
                //f.setFcpAccount(FCPua);
            }

        }
        // ecosystem.setFCWDirectory(fcWarehouseList);
        JOptionPane.showMessageDialog(this, "Pantry Item details updated successfully");
        clearfields();
        populatePantryItemsTable();
        viewPanel.setVisible(false);
    }//GEN-LAST:event_btnDOUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
       viewPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tblDOItemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDOItemsMousePressed
        // TODO add your handling code here:
        tblDOItems.setSelectionForeground(Color.BLUE);
    }//GEN-LAST:event_tblDOItemsMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImage;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDOUpdate;
    private javax.swing.JButton btnPDelete;
    private javax.swing.JButton btnPEdit;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lblAccessoryItem;
    private javax.swing.JLabel lblAccessoryQnt;
    private javax.swing.JLabel lblAddPantryTitle;
    private javax.swing.JLabel lblDHName;
    private javax.swing.JLabel lblDOManager;
    private javax.swing.JLabel lblDOname;
    private javax.swing.JLabel lblItemID;
    private javax.swing.JLabel lblitmId;
    private javax.swing.JTable tblDOItems;
    private javax.swing.JTextField txtAccessoryItem;
    private javax.swing.JTextField txtAccessoryQnt;
    private javax.swing.JTextField txtDHname;
    private javax.swing.JTextField txtDOManager;
    private javax.swing.JTextField txtDOName;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables

    private void populatePantryItemsTable() {
        DefaultTableModel model = (DefaultTableModel) tblDOItems.getModel();
        model.setRowCount(0);
        for (DropOffItems fcpi : ecosystem.getACDOIDirectory().getDOiList()) {
            String fcpWhName = fcpi.getDropOffHubName();
            System.out.println(fcpWhName + "ankith ouside populatetbl");
            //if(fcpWhName.equals(WHname)){
             //System.out.println(fcpWhName + "ankith inside populatetbl");
            Object[] row = new Object[6];
            row[0] = fcpi;
            row[1] = fcpi.getDropOffHubName();
            row[2] = fcpi.getDropOffName();
            row[3] = fcpi.getDropOffManager();
            row[4] = fcpi.getAccessoryItems();
            row[5] = fcpi.getAccessoryQuantity();
            model.addRow(row);
            //}
        }
    }

    private void clearfields() {
        txtDHname.setText("");
        txtDOName.setText("");
        txtDOManager.setText("");
        txtAccessoryItem.setText("");
        txtAccessoryQnt.setText("");
        lblItemID.setText("");
    }
}
