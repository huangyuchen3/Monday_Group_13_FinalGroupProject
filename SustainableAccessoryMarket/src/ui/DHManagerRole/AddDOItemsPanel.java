/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DHManagerRole;

import Business.EcoSystem;
import Business.DropOff.DropOff;
import Business.DropOff.DropOffItems;
import Business.DropOff.DropOffItemsDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import ui.DonorRole.DonorProfilePanel;

/**
 *
 *@author reetikabhanushali
 */
public class AddDOItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddDOItemsPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    DropOffItemsDirectory fcpid;
    String WHname;
    public AddDOItemsPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        if(ecosystem.getACDOIDirectory()== null){
         ecosystem.setACDOIDirectory(new DropOffItemsDirectory());
        }
        String FCAname=userAcc.getEmployee().getName();
        System.out.println(FCAname);
        WHname= ecosystem.getACDDirectory().getDHname(FCAname);
        System.out.println(WHname);
        lblWHname.setText(WHname);
        ArrayList<String> PantryList = new ArrayList<String>();
        for (DropOff fcp : ecosystem.getACDOFDirectory().getFcpList()){
            if(fcp.getDropOffName().equals(WHname)){
                PantryList.add(fcp.getDropOffName());
            }
            
        }
        cbDOName.setModel(new DefaultComboBoxModel<String>(PantryList.toArray(new String[0])));
        txtDOManager.setEnabled(false);
        if(cbDOName.getSelectedItem() == null || cbDOName.getItemCount() == 0){
        txtDOManager.setText("");
        }else{ txtDOManager.setText(getMngrName(cbDOName.getSelectedItem().toString())); }
        setBG();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddFCPantryTitle = new javax.swing.JLabel();
        lblDHname = new javax.swing.JLabel();
        txtDOManager = new javax.swing.JTextField();
        lblDOManager = new javax.swing.JLabel();
        txtAccessoryitem = new javax.swing.JTextField();
        lblAccessoryitem = new javax.swing.JLabel();
        txtAccessoryQuantity = new javax.swing.JTextField();
        lblWHname = new javax.swing.JLabel();
        lblDOName = new javax.swing.JLabel();
        cbDOName = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        lblAccessoryitemID = new javax.swing.JLabel();
        txtAccessoryitemId = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        LabelImage = new javax.swing.JLabel();
        lblAccessoryQuantity = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddFCPantryTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 29)); // NOI18N
        lblAddFCPantryTitle.setForeground(new java.awt.Color(102, 102, 255));
        lblAddFCPantryTitle.setText("Add Drop Off Items");
        add(lblAddFCPantryTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        lblDHname.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblDHname.setText("Distribution Hub Name:");
        add(lblDHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        txtDOManager.setEditable(false);
        txtDOManager.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtDOManager.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDOManager.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDOManagerFocusLost(evt);
            }
        });
        txtDOManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOManagerActionPerformed(evt);
            }
        });
        add(txtDOManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 178, 137, -1));

        lblDOManager.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblDOManager.setText("Drop Off Store Manager:");
        add(lblDOManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, -1));

        txtAccessoryitem.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtAccessoryitem.setPreferredSize(new java.awt.Dimension(150, 25));
        txtAccessoryitem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAccessoryitemFocusLost(evt);
            }
        });
        add(txtAccessoryitem, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 264, 137, -1));

        lblAccessoryitem.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblAccessoryitem.setText("Accessory Item:");
        add(lblAccessoryitem, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, -1, -1));

        txtAccessoryQuantity.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtAccessoryQuantity.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtAccessoryQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 307, 137, -1));

        lblWHname.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        add(lblWHname, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 98, 130, 20));

        lblDOName.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblDOName.setText("Drop Off Store:");
        add(lblDOName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, -1, -1));

        cbDOName.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        cbDOName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbDOName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDONameActionPerformed(evt);
            }
        });
        add(cbDOName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 150, -1));

        btnSubmit.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 379, -1, -1));

        lblAccessoryitemID.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblAccessoryitemID.setText("Item ID:");
        add(lblAccessoryitemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, -1, -1));

        txtAccessoryitemId.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        txtAccessoryitemId.setPreferredSize(new java.awt.Dimension(150, 25));
        txtAccessoryitemId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAccessoryitemIdFocusLost(evt);
            }
        });
        add(txtAccessoryitemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 221, 137, -1));

        btnClear.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, -1, -1));

        LabelImage.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        add(LabelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 1270, 970));

        lblAccessoryQuantity.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        lblAccessoryQuantity.setText("Item Quantity:");
        add(lblAccessoryQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 311, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

     public void setBG() {
        try {
            LabelImage.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImage.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImage.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/background2.png"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImage.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void txtDOManagerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDOManagerFocusLost
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtDOManagerFocusLost

    private void txtAccessoryitemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAccessoryitemFocusLost
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtAccessoryitemFocusLost

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
            DropOffItems fcpi=new DropOffItems();
            fcpi.setDropOffItemId(txtAccessoryitemId.getText());
            fcpi.setDropOffHubName(WHname);
            fcpi.setDropOffName(String.valueOf(cbDOName.getSelectedItem()));
            fcpi.setDropOffManager(txtDOManager.getText());
            fcpi.setAccessoryItems(txtAccessoryitem.getText());
            fcpi.setAccessoryQuantity(txtAccessoryQuantity.getText());           
            fcpid = ecosystem.getACDOIDirectory();
            fcpid.addFCPItems(fcpi);
            ecosystem.setACDOIDirectory(fcpid);
            JOptionPane.showMessageDialog(this, "Items added to Pantry successfully!");
            clearfields(); 
        }
        else{
            JOptionPane.showMessageDialog(this, "Please make sure that you have filled all mandatory fields");
        }
    }

    private void clearfields() {
        txtAccessoryitemId.setText("");
       if(cbDOName.getSelectedItem().toString().isEmpty()){
        txtDOManager.setText("");
        }else{ txtDOManager.setText(getMngrName(cbDOName.getSelectedItem().toString())); }
        txtAccessoryitem.setText("");
        txtAccessoryQuantity.setText("");
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbDONameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDONameActionPerformed
        // TODO add your handling code here:
        String fpname=cbDOName.getSelectedItem().toString();
        txtDOManager.setText(getMngrName(fpname));
    }//GEN-LAST:event_cbDONameActionPerformed

    public String getMngrName(String Dropoff){
        String mngr="";
        for(DropOff fp: ecosystem.getACDOFDirectory().getFcpList()){
            if(fp.getDropOffName().equals(Dropoff)){
                mngr = fp.getDropOffManager(); 
            }
        }
        return mngr;
    }
    
    private void txtAccessoryitemIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAccessoryitemIdFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccessoryitemIdFocusLost

    private void txtDOManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOManagerActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearfields();
    }//GEN-LAST:event_btnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImage;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbDOName;
    private javax.swing.JLabel lblAccessoryQuantity;
    private javax.swing.JLabel lblAccessoryitem;
    private javax.swing.JLabel lblAccessoryitemID;
    private javax.swing.JLabel lblAddFCPantryTitle;
    private javax.swing.JLabel lblDHname;
    private javax.swing.JLabel lblDOManager;
    private javax.swing.JLabel lblDOName;
    private javax.swing.JLabel lblWHname;
    private javax.swing.JTextField txtAccessoryQuantity;
    private javax.swing.JTextField txtAccessoryitem;
    private javax.swing.JTextField txtAccessoryitemId;
    private javax.swing.JTextField txtDOManager;
    // End of variables declaration//GEN-END:variables

    private boolean nullCheck() {
        if(txtDOManager.getText().length()!=0 && txtAccessoryitem.getText().length()!=0 && txtAccessoryQuantity.getText().length()!=0)
        {
            return false;
        }
        else return true;
    }
}
